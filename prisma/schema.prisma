generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  organization_id String   @id @default(uuid()) @db.Uuid
  name            String   @db.VarChar(255)
  owner_id        String   @db.Uuid
  address         String?  @db.VarChar(255)
  contact_info    String?  @db.VarChar(255)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  owner   User     @relation(name: "OrganizationOwner", fields: [owner_id], references: [user_id])
  devices Device[]
}

model User {
  user_id     String   @id @default(uuid()) @db.Uuid
  keycloak_id String   @unique @db.VarChar(255)
  name        String   @db.VarChar(255)
  email       String   @unique @db.VarChar(255)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  ownedOrganizations Organization[]           @relation(name: "OrganizationOwner")
  agentAssignments   DeviceAgentAssignments[]
}

model Device {
  id                String   @id @default(uuid()) @db.Uuid
  organization_id   String   @db.Uuid
  name              String   @db.VarChar(255)
  phone_number      String?  @db.VarChar(25)
  description       String?
  connection_status String   @db.VarChar(50)
  owner_jid         String?  @db.VarChar(255)
  profile_pic_url   String?  @db.VarChar(255)
  auth_id           Int?
  auth_token        String?
  webhook           String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  organization     Organization             @relation(fields: [organization_id], references: [organization_id])
  agentAssignments DeviceAgentAssignments[]
}

model DeviceAgentAssignments {
  assignment_id String   @id @default(uuid()) @db.Uuid
  device_id     String   @db.Uuid
  agent_id      String   @db.Uuid
  assigned_at   DateTime @default(now())

  device Device @relation(fields: [device_id], references: [id])
  agent  User   @relation(fields: [agent_id], references: [user_id])
}
